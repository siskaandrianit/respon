{"version":3,"sources":["Home.js","Male.js","Female.js","Amerika.js","Main.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","items","_this2","fetch","then","res","json","parsedJSON","results","map","data","id","concat","name","firstName","first","lastName","last","location","nat","thumbnail","picture","large","email","date","dob","age","setState","isLoaded","catch","error","console","log","react_default","a","createElement","className","length","item","key","src","alt","Component","Male","Female","Amerika","password","login","Main","react_router_dom","exact","to","react_router","path","component","Boolean","window","hostname","match","ReactDOM","render","src_Main","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4c3c0362.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://randomuser.me/api/?results=67\")\r\n    .then(res => res.json())\r\n    .then(parsedJSON => parsedJSON.results.map(data => (\r\n      {\r\n        id: `${data.id.name}`,\r\n        firstName: `${data.name.first}`,\r\n        lastName: `${data.name.last}`,\r\n        location: `${data.location.state}, ${data.nat}`,\r\n        thumbnail: `${data.picture.large}`,\r\n        email:`${data.email}`,\r\n        date:`${data.dob.date}`,\r\n        age:`${data.dob.age}`,\r\n      }\r\n    )))\r\n    .then(items => this.setState({\r\n      items,\r\n      isLoaded: false\r\n    }))\r\n    .catch(error => console.log('parsing failed', error))\r\n  }\r\n\r\n  render() {\r\n    const {items} = this.state;\r\n    return (\r\n      <div className=\"boxWhite\">\r\n        {\r\n          items.length > 0 ? items.map(item => {\r\n            const {id, firstName, lastName, location, thumbnail , email,date,age} = item;\r\n            return (\r\n              <div key={id} className=\"bgCircle\">\r\n                <center><img src={thumbnail} alt={firstName} className=\"circle\"/> </center><br />\r\n                <div className=\"ctr\">\r\n                  {firstName} {lastName}<br />\r\n                  {location} <br/>\r\n                  {email}\r\n                  <br/>\r\n                  {date} {age}\r\n                </div>\r\n             \r\n              </div>\r\n            );\r\n          }) : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\n\r\nclass Male extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://randomuser.me/api/?gender=male&results=20\")\r\n    .then(res => res.json())\r\n    .then(parsedJSON => parsedJSON.results.map(data => (\r\n      {\r\n        id: `${data.id.name}`,\r\n        firstName: `${data.name.first}`,\r\n        lastName: `${data.name.last}`,\r\n        location: `${data.location.state}, ${data.nat}`,\r\n        thumbnail: `${data.picture.large}`,\r\n        email:`${data.email}`,\r\n        date:`${data.dob.date}`,\r\n        age:`${data.dob.age}`,\r\n      }\r\n    )))\r\n    .then(items => this.setState({\r\n      items,\r\n      isLoaded: false\r\n    }))\r\n    .catch(error => console.log('parsing failed', error))\r\n  }\r\n\r\n  render() {\r\n    const {items} = this.state;\r\n    return (\r\n      <div className=\"boxWhite\">\r\n        {\r\n          items.length > 0 ? items.map(item => {\r\n            const {id, firstName, lastName, location, thumbnail , email,date,age} = item;\r\n            return (\r\n              <div key={id} className=\"bgCircle\">\r\n                <center><img src={thumbnail} alt={firstName} className=\"circle\"/> </center><br />\r\n                <div className=\"ctr\">\r\n                  {firstName} {lastName}<br />\r\n                  {location} <br/>\r\n                  {email}\r\n                  <br/>\r\n                  {date} {age}\r\n                </div>\r\n             \r\n              </div>\r\n            );\r\n          }) : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Male;","import React, { Component } from \"react\";\r\n\r\nclass Female extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://randomuser.me/api/?gender=female&results=20\")\r\n    .then(res => res.json())\r\n    .then(parsedJSON => parsedJSON.results.map(data => (\r\n      {\r\n        id: `${data.id.name}`,\r\n        firstName: `${data.name.first}`,\r\n        lastName: `${data.name.last}`,\r\n        location: `${data.location.state}, ${data.nat}`,\r\n        thumbnail: `${data.picture.large}`,\r\n        email:`${data.email}`,\r\n        date:`${data.dob.date}`,\r\n        age:`${data.dob.age}`,\r\n        \r\n      }\r\n    )))\r\n    .then(items => this.setState({\r\n      items,\r\n      isLoaded: false\r\n    }))\r\n    .catch(error => console.log('parsing failed', error))\r\n  }\r\n\r\n  render() {\r\n    const {items} = this.state;\r\n    return (\r\n      <div className=\"boxWhite\">\r\n        {\r\n          items.length > 0 ? items.map(item => {\r\n            const {id, firstName, lastName, location, thumbnail , email,date,age} = item;\r\n            return (\r\n              <div key={id} className=\"bgCircle\">\r\n                <center><img src={thumbnail} alt={firstName} className=\"circle\"/> </center><br />\r\n                <div className=\"ctr\">\r\n                  {firstName} {lastName}<br />\r\n                  {location} <br/>\r\n                  {email}\r\n                  <br/>\r\n                  {date} {age}\r\n                </div>\r\n             \r\n              </div>\r\n            );\r\n          }) : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Female;","import React, { Component } from \"react\";\r\n\r\nclass Amerika extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://randomuser.me/api/?gender=female&nat=US&password=upper,lower,1-16&results=20\")\r\n    .then(res => res.json())\r\n    .then(parsedJSON => parsedJSON.results.map(data => (\r\n      {\r\n        id: `${data.id.name}`,\r\n        firstName: `${data.name.first}`,\r\n        lastName: `${data.name.last}`,\r\n        location: `${data.location.state}, ${data.nat}`,\r\n        thumbnail: `${data.picture.large}`,\r\n        email:`${data.email}`,\r\n        date:`${data.dob.date}`,\r\n        age:`${data.dob.age}`,\r\n        password:`${data.login.password}`,\r\n        \r\n      }\r\n    )))\r\n    .then(items => this.setState({\r\n      items,\r\n      isLoaded: false\r\n    }))\r\n    .catch(error => console.log('parsing failed', error))\r\n  }\r\n\r\n  render() {\r\n    const {items} = this.state;\r\n    return (\r\n      <div className=\"boxWhite\">\r\n        {\r\n          items.length > 0 ? items.map(item => {\r\n            const {id, firstName, lastName, location, thumbnail , email,date,age,password} = item;\r\n            return (\r\n              <div key={id} className=\"bgCircle\">\r\n                <center><img src={thumbnail} alt={firstName} className=\"circle\"/> </center><br />\r\n                <div className=\"ctr\">\r\n                  {firstName} {lastName}<br />\r\n                  {location} <br/>\r\n                  {email}\r\n                  <br/>\r\n                  {date} {age}\r\n                  <br/>\r\n                  {password}\r\n                </div>\r\n             \r\n              </div>\r\n            );\r\n          }) : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Amerika;","import React,{Component} from \"react\";\r\nimport { Route,NavLink,HashRouter } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Male from \"./Male\";\r\nimport Female from \"./Female\";\r\nimport Amerika from \"./Amerika\";\r\nclass Main extends Component {\r\n    render() {\r\n      return (\r\n        <HashRouter>\r\n          <div>\r\n            <h1 className=\"title\">Fetching Data API</h1>\r\n            <ul className=\"header\">\r\n              <li><NavLink exact to=\"/\">Home</NavLink></li>\r\n              <li><NavLink exact to=\"/male\">Male</NavLink></li>\r\n              <li><NavLink exact to=\"/female\">Female</NavLink></li>\r\n              <li><NavLink exact to=\"/amerika\">Amerika</NavLink></li>\r\n            </ul>\r\n            <div className=\"content\">\r\n              <Route exact path=\"/\" component={Home}/>\r\n              <Route exact path=\"/Male\" component={Male}/>\r\n              <Route exact path=\"/Female\" component={Female}/>\r\n              <Route exact path=\"/Amerika\" component={Amerika}/>\r\n              \r\n            </div>\r\n          </div>\r\n          </HashRouter>\r\n      );\r\n    }\r\n  }\r\n   \r\n  export default Main;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\nimport Main from './Main';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Main />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}